<Window
    x:Class="ImageRecognitionSurfUI.MainWindow"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:controls="clr-namespace:ImageRecognitionSurfUI.Controls"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
    xmlns:local="clr-namespace:ImageRecognitionSurfUI"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:vm="clr-namespace:ImageRecognitionSurfUI.ViewModels"
    Title="{Binding Title}"
    Width="800"
    Height="285"
    d:DataContext="{d:DesignInstance Type=vm:MainWindowViewModel,
                                     IsDesignTimeCreatable=False}"
    d:Height="400"
    d:Width="600"
    mc:Ignorable="d">
    <i:Interaction.Triggers>
        <i:EventTrigger EventName="Loaded">
            <i:InvokeCommandAction Command="{Binding LoadedCommand}" />
        </i:EventTrigger>
    </i:Interaction.Triggers>
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="Auto" />
            <ColumnDefinition Width="Auto" />
            <ColumnDefinition Width="*" />
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>

        <Button
            Grid.Row="0"
            Grid.Column="0"
            Margin="2"
            Command="{Binding LoadSourceImageCommand}"
            Content="Загрузить изображение" />
        <Grid
            Grid.Row="0"
            Grid.Column="2"
            Margin="2">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>
            <UniformGrid Columns="2">
                <Button
                    Grid.Row="0"
                    Command="{Binding ProcessImageCommand}"
                    Content="Обработать изображение" />
                <Button
                    Grid.Row="0"
                    Command="{Binding RotateAgnosticCheckCommand}"
                    Content="Тест без зависимости к наклону" />
            </UniformGrid>

            <Expander
                Grid.Row="1"
                DataContext="{Binding ProcessOptionsViewModel}"
                Header="Опции"
                IsExpanded="True">
                <StackPanel Orientation="Vertical">
                    <UniformGrid Columns="2">
                        <TextBlock Margin="2" Text="ContourApproximationModes" />
                        <ComboBox
                            Margin="2"
                            ItemsSource="{x:Static vm:ProcessOptionsViewModel.GetAvailableContourApproximationModes}"
                            SelectedValue="{Binding SelectedContourApproximationMode, UpdateSourceTrigger=PropertyChanged}" />
                    </UniformGrid>
                    <UniformGrid Columns="2">
                        <TextBlock Margin="2" Text="RetrievalMode" />
                        <ComboBox
                            Margin="2"
                            ItemsSource="{x:Static vm:ProcessOptionsViewModel.GetAvailableRetrievalModes}"
                            SelectedValue="{Binding SelectedRetrievalMode, UpdateSourceTrigger=PropertyChanged}" />
                    </UniformGrid>

                    <UniformGrid Columns="2">
                        <TextBlock Margin="2" Text="TemplateMatchMode" />
                        <ComboBox
                            Margin="2"
                            ItemsSource="{x:Static vm:ProcessOptionsViewModel.GetAvailableTemplateMatchModes}"
                            SelectedValue="{Binding SelectedTemplateMatchMode, UpdateSourceTrigger=PropertyChanged}" />
                    </UniformGrid>

                    <UniformGrid Columns="2">
                        <TextBlock Margin="2" Text="ImreadMode" />
                        <ComboBox
                            Margin="2"
                            ItemsSource="{x:Static vm:ProcessOptionsViewModel.GetAvailableImreadModes}"
                            SelectedValue="{Binding SelectedImreadMode, UpdateSourceTrigger=PropertyChanged}" />
                    </UniformGrid>

                    <UniformGrid Columns="2">
                        <TextBlock Margin="2" Text="MatType" />
                        <ComboBox
                            Margin="2"
                            ItemsSource="{x:Static vm:ProcessOptionsViewModel.GetAvailableMatTypes}"
                            SelectedValue="{Binding SelectedMatType, UpdateSourceTrigger=PropertyChanged}" />
                    </UniformGrid>
                </StackPanel>
            </Expander>
        </Grid>

        <controls:ImageSourceControl
            Grid.Row="1"
            Grid.Column="0"
            CurrentImagePath="{Binding SourceImagePath}" />
        <GridSplitter
            Grid.Row="0"
            Grid.RowSpan="3"
            Grid.Column="1"
            Width="3"
            HorizontalAlignment="Center"
            VerticalAlignment="Stretch"
            Background="DarkGray"
            ShowsPreview="False" />
        <controls:ImageSourceControl
            Grid.Row="1"
            Grid.Column="2"
            CurrentImagePath="{Binding ResultImagePath}" />

        <!--
        <Border
            Grid.Row="2"
            Grid.Column="0"
            Margin="2"
            Padding="1"
            BorderBrush="Gray"
            BorderThickness="1">
            <Image
                HorizontalAlignment="Center"
                VerticalAlignment="Center"
                Source="{Binding SourceImagePath}"
                Stretch="UniformToFill" />
        </Border>
        <Border
            Grid.Row="2"
            Grid.Column="1"
            Margin="2"
            Padding="1"
            BorderBrush="Gray"
            BorderThickness="1">
            <Image
                HorizontalAlignment="Center"
                VerticalAlignment="Center"
                Source="{Binding ResultImagePath}"
                Stretch="UniformToFill" />
        </Border>-->
    </Grid>
</Window>
